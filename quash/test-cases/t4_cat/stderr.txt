==1701== Memcheck, a memory error detector
==1701== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1701== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1701== Command: /home/bsauvage/EECS678/Quash/quash/quash
==1701== 
IMPLEMENT ME: src/execute.c(line 65): check_jobs_bg_status()
IMPLEMENT ME: src/execute.c(line 325): create_process()
IMPLEMENT ME: src/execute.c(line 142): run_export()
IMPLEMENT ME: src/execute.c(line 359): run_script()
IMPLEMENT ME: src/execute.c(line 65): check_jobs_bg_status()
IMPLEMENT ME: src/execute.c(line 325): create_process()
IMPLEMENT ME: src/execute.c(line 142): run_export()
IMPLEMENT ME: src/execute.c(line 359): run_script()
IMPLEMENT ME: src/execute.c(line 325): create_process()
IMPLEMENT ME: src/execute.c(line 325): create_process()
IMPLEMENT ME: src/execute.c(line 65): check_jobs_bg_status()
IMPLEMENT ME: src/execute.c(line 325): create_process()
IMPLEMENT ME: src/execute.c(line 359): run_script()
IMPLEMENT ME: src/execute.c(line 65): check_jobs_bg_status()
IMPLEMENT ME: src/execute.c(line 325): create_process()
IMPLEMENT ME: src/execute.c(line 359): run_script()
IMPLEMENT ME: src/execute.c(line 65): check_jobs_bg_status()
IMPLEMENT ME: src/execute.c(line 325): create_process()
IMPLEMENT ME: src/execute.c(line 359): run_script()
IMPLEMENT ME: src/execute.c(line 325): create_process()
IMPLEMENT ME: src/execute.c(line 107): run_generic()
==1953== 
==1953== HEAP SUMMARY:
==1953==     in use at exit: 0 bytes in 0 blocks
==1953==   total heap usage: 10 allocs, 10 frees, 1,067,730 bytes allocated
==1953== 
==1953== All heap blocks were freed -- no leaks are possible
==1953== 
==1953== For counts of detected and suppressed errors, rerun with: -v
==1953== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
IMPLEMENT ME: src/execute.c(line 325): create_process()
IMPLEMENT ME: src/execute.c(line 325): create_process()
ERROR: Failed to execute program: Success
==1701== 
==1701== HEAP SUMMARY:
==1701==     in use at exit: 0 bytes in 0 blocks
==1701==   total heap usage: 28 allocs, 28 frees, 1,074,370 bytes allocated
==1701== 
==1701== All heap blocks were freed -- no leaks are possible
==1701== 
==1701== For counts of detected and suppressed errors, rerun with: -v
==1701== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1951== 
==1951== HEAP SUMMARY:
==1951==     in use at exit: 0 bytes in 0 blocks
==1951==   total heap usage: 7 allocs, 7 frees, 1,066,386 bytes allocated
==1951== 
==1951== All heap blocks were freed -- no leaks are possible
==1951== 
==1951== For counts of detected and suppressed errors, rerun with: -v
==1951== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
IMPLEMENT ME: src/execute.c(line 107): run_generic()
IMPLEMENT ME: src/execute.c(line 107): run_generic()
ERROR: Failed to execute program: Success
ERROR: Failed to execute program: Success
==1962== 
==1962== HEAP SUMMARY:
==1962==     in use at exit: 0 bytes in 0 blocks
==1962==   total heap usage: 22 allocs, 22 frees, 1,071,746 bytes allocated
==1962== 
==1962== All heap blocks were freed -- no leaks are possible
==1962== 
==1962== For counts of detected and suppressed errors, rerun with: -v
==1962== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1959== 
==1959== HEAP SUMMARY:
==1959==     in use at exit: 0 bytes in 0 blocks
==1959==   total heap usage: 17 allocs, 17 frees, 1,070,370 bytes allocated
==1959== 
==1959== All heap blocks were freed -- no leaks are possible
==1959== 
==1959== For counts of detected and suppressed errors, rerun with: -v
==1959== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1971== 
==1971== HEAP SUMMARY:
==1971==     in use at exit: 0 bytes in 0 blocks
==1971==   total heap usage: 28 allocs, 28 frees, 1,074,370 bytes allocated
==1971== 
==1971== All heap blocks were freed -- no leaks are possible
==1971== 
==1971== For counts of detected and suppressed errors, rerun with: -v
==1971== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
