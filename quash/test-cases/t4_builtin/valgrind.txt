==52130== Memcheck, a memory error detector
==52130== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==52130== Using Valgrind-3.9.0 and LibVEX; rerun with -h for copyright info
==52130== Command: /home/bsauvage/EECS678/Quash/quash/quash
==52130== 
==52206== Invalid write of size 1
==52206==    at 0x40254F: get_current_directory (execute.c:43)
==52206==    by 0x4027DA: run_pwd (execute.c:187)
==52206==    by 0x4028BB: child_run_command (execute.c:230)
==52206==    by 0x402ADC: create_process (execute.c:367)
==52206==    by 0x402C40: run_script (execute.c:398)
==52206==    by 0x401336: main (quash.c:132)
==52206==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==52206== 
==52206== 
==52206== Process terminating with default action of signal 11 (SIGSEGV)
==52206==  Access not within mapped region at address 0x0
==52206==    at 0x40254F: get_current_directory (execute.c:43)
==52206==    by 0x4027DA: run_pwd (execute.c:187)
==52206==    by 0x4028BB: child_run_command (execute.c:230)
==52206==    by 0x402ADC: create_process (execute.c:367)
==52206==    by 0x402C40: run_script (execute.c:398)
==52206==    by 0x401336: main (quash.c:132)
==52206==  If you believe this happened as a result of a stack
==52206==  overflow in your program's main thread (unlikely but
==52206==  possible), you can try to increase the size of the
==52206==  main thread stack using the --main-stacksize= flag.
==52206==  The main thread stack size used in this run was 8388608.
==52206== 
==52206== HEAP SUMMARY:
==52206==     in use at exit: 17,730 bytes in 5 blocks
==52206==   total heap usage: 8 allocs, 3 frees, 19,074 bytes allocated
==52206== 
==52206== LEAK SUMMARY:
==52206==    definitely lost: 0 bytes in 0 blocks
==52206==    indirectly lost: 0 bytes in 0 blocks
==52206==      possibly lost: 0 bytes in 0 blocks
==52206==    still reachable: 17,730 bytes in 5 blocks
==52206==         suppressed: 0 bytes in 0 blocks
==52206== Reachable blocks (those to which a pointer was found) are not shown.
==52206== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==52206== 
==52206== For counts of detected and suppressed errors, rerun with: -v
==52206== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)
==52212== Invalid write of size 1
==52212==    at 0x40254F: get_current_directory (execute.c:43)
==52212==    by 0x4027DA: run_pwd (execute.c:187)
==52212==    by 0x4028BB: child_run_command (execute.c:230)
==52212==    by 0x402ADC: create_process (execute.c:367)
==52212==    by 0x402C40: run_script (execute.c:398)
==52212==    by 0x401336: main (quash.c:132)
==52212==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==52212== 
==52212== 
==52212== Process terminating with default action of signal 11 (SIGSEGV)
==52212==  Access not within mapped region at address 0x0
==52212==    at 0x40254F: get_current_directory (execute.c:43)
==52212==    by 0x4027DA: run_pwd (execute.c:187)
==52212==    by 0x4028BB: child_run_command (execute.c:230)
==52212==    by 0x402ADC: create_process (execute.c:367)
==52212==    by 0x402C40: run_script (execute.c:398)
==52212==    by 0x401336: main (quash.c:132)
==52212==  If you believe this happened as a result of a stack
==52212==  overflow in your program's main thread (unlikely but
==52212==  possible), you can try to increase the size of the
==52212==  main thread stack using the --main-stacksize= flag.
==52212==  The main thread stack size used in this run was 8388608.
==52221== Conditional jump or move depends on uninitialised value(s)
==52221==    at 0x3C8D448A90: vfprintf (in /usr/lib64/libc-2.18.so)
==52221==    by 0x3C8D451A46: fprintf (in /usr/lib64/libc-2.18.so)
==52221==    by 0x402701: run_echo (execute.c:128)
==52221==    by 0x4028AF: child_run_command (execute.c:226)
==52221==    by 0x402ADC: create_process (execute.c:367)
==52221==    by 0x402C40: run_script (execute.c:398)
==52221==    by 0x401336: main (quash.c:132)
==52221==  Uninitialised value was created by a heap allocation
==52221==    at 0x4A0645D: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)
==52221==    by 0x403DB0: __initialize_memory_pool (memory_pool.c:44)
==52221==    by 0x403F2A: initialize_memory_pool (memory_pool.c:89)
==52221==    by 0x401315: main (quash.c:128)
==52221== 
==52221== Invalid read of size 1
==52221==    at 0x3C8D448C7B: vfprintf (in /usr/lib64/libc-2.18.so)
==52221==    by 0x3C8D451A46: fprintf (in /usr/lib64/libc-2.18.so)
==52221==    by 0x402701: run_echo (execute.c:128)
==52221==    by 0x4028AF: child_run_command (execute.c:226)
==52221==    by 0x402ADC: create_process (execute.c:367)
==52221==    by 0x402C40: run_script (execute.c:398)
==52221==    by 0x401336: main (quash.c:132)
==52221==  Address 0x7270007367726178 is not stack'd, malloc'd or (recently) free'd
==52221== 
==52221== 
==52221== Process terminating with default action of signal 11 (SIGSEGV)
==52221==  General Protection Fault
==52221==    at 0x3C8D448C7B: vfprintf (in /usr/lib64/libc-2.18.so)
==52221==    by 0x3C8D451A46: fprintf (in /usr/lib64/libc-2.18.so)
==52221==    by 0x402701: run_echo (execute.c:128)
==52221==    by 0x4028AF: child_run_command (execute.c:226)
==52221==    by 0x402ADC: create_process (execute.c:367)
==52221==    by 0x402C40: run_script (execute.c:398)
==52221==    by 0x401336: main (quash.c:132)
==52228== Conditional jump or move depends on uninitialised value(s)
==52228==    at 0x3C8D448A90: vfprintf (in /usr/lib64/libc-2.18.so)
==52228==    by 0x3C8D451A46: fprintf (in /usr/lib64/libc-2.18.so)
==52228==    by 0x402701: run_echo (execute.c:128)
==52228==    by 0x4028AF: child_run_command (execute.c:226)
==52228==    by 0x402ADC: create_process (execute.c:367)
==52228==    by 0x402C40: run_script (execute.c:398)
==52228==    by 0x401336: main (quash.c:132)
==52228==  Uninitialised value was created by a heap allocation
==52228==    at 0x4A0645D: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)
==52228==    by 0x403DB0: __initialize_memory_pool (memory_pool.c:44)
==52228==    by 0x403F2A: initialize_memory_pool (memory_pool.c:89)
==52228==    by 0x401315: main (quash.c:128)
==52228== 
==52228== Invalid read of size 1
==52228==    at 0x3C8D448C7B: vfprintf (in /usr/lib64/libc-2.18.so)
==52228==    by 0x3C8D451A46: fprintf (in /usr/lib64/libc-2.18.so)
==52228==    by 0x402701: run_echo (execute.c:128)
==52228==    by 0x4028AF: child_run_command (execute.c:226)
==52228==    by 0x402ADC: create_process (execute.c:367)
==52228==    by 0x402C40: run_script (execute.c:398)
==52228==    by 0x401336: main (quash.c:132)
==52228==  Address 0x7478742e6f686365 is not stack'd, malloc'd or (recently) free'd
==52228== 
==52228== 
==52228== Process terminating with default action of signal 11 (SIGSEGV)
==52228==  General Protection Fault
==52228==    at 0x3C8D448C7B: vfprintf (in /usr/lib64/libc-2.18.so)
==52228==    by 0x3C8D451A46: fprintf (in /usr/lib64/libc-2.18.so)
==52228==    by 0x402701: run_echo (execute.c:128)
==52228==    by 0x4028AF: child_run_command (execute.c:226)
==52228==    by 0x402ADC: create_process (execute.c:367)
==52228==    by 0x402C40: run_script (execute.c:398)
==52228==    by 0x401336: main (quash.c:132)
==52212== 
==52212== HEAP SUMMARY:
==52212==     in use at exit: 17,730 bytes in 5 blocks
==52212==   total heap usage: 11 allocs, 6 frees, 20,418 bytes allocated
==52212== 
==52212== LEAK SUMMARY:
==52212==    definitely lost: 0 bytes in 0 blocks
==52212==    indirectly lost: 0 bytes in 0 blocks
==52212==      possibly lost: 0 bytes in 0 blocks
==52212==    still reachable: 17,730 bytes in 5 blocks
==52212==         suppressed: 0 bytes in 0 blocks
==52212== Reachable blocks (those to which a pointer was found) are not shown.
==52212== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==52212== 
==52212== For counts of detected and suppressed errors, rerun with: -v
==52212== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)
==52228== 
==52228== HEAP SUMMARY:
==52228==     in use at exit: 17,730 bytes in 5 blocks
==52228==   total heap usage: 25 allocs, 20 frees, 29,026 bytes allocated
==52228== 
==52228== LEAK SUMMARY:
==52221== 
==52228==    definitely lost: 0 bytes in 0 blocks
==52228==    indirectly lost: 0 bytes in 0 blocks
==52228==      possibly lost: 0 bytes in 0 blocks
==52228==    still reachable: 17,730 bytes in 5 blocks
==52228==         suppressed: 0 bytes in 0 blocks
==52228== Reachable blocks (those to which a pointer was found) are not shown.
==52228== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==52221== HEAP SUMMARY:
==52221==     in use at exit: 17,730 bytes in 5 blocks
==52221==   total heap usage: 22 allocs, 17 frees, 27,682 bytes allocated
==52221== 
==52228== 
==52228== For counts of detected and suppressed errors, rerun with: -v
==52228== ERROR SUMMARY: 3 errors from 2 contexts (suppressed: 2 from 2)
==52221== LEAK SUMMARY:
==52221==    definitely lost: 0 bytes in 0 blocks
==52221==    indirectly lost: 0 bytes in 0 blocks
==52221==      possibly lost: 0 bytes in 0 blocks
==52221==    still reachable: 17,730 bytes in 5 blocks
==52221==         suppressed: 0 bytes in 0 blocks
==52221== Reachable blocks (those to which a pointer was found) are not shown.
==52221== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==52221== 
==52221== For counts of detected and suppressed errors, rerun with: -v
==52221== ERROR SUMMARY: 3 errors from 2 contexts (suppressed: 2 from 2)
==52130== 
==52130== HEAP SUMMARY:
==52130==     in use at exit: 0 bytes in 0 blocks
==52130==   total heap usage: 28 allocs, 28 frees, 30,370 bytes allocated
==52130== 
==52130== All heap blocks were freed -- no leaks are possible
==52130== 
==52130== For counts of detected and suppressed errors, rerun with: -v
==52130== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
