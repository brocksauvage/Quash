==52067== Memcheck, a memory error detector
==52067== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==52067== Using Valgrind-3.9.0 and LibVEX; rerun with -h for copyright info
==52067== Command: /home/bsauvage/EECS678/Quash/quash/quash
==52067== 
==52168== Invalid write of size 1
==52168==    at 0x40254F: get_current_directory (execute.c:43)
==52168==    by 0x4027DA: run_pwd (execute.c:187)
==52168==    by 0x4028BB: child_run_command (execute.c:230)
==52168==    by 0x402ADC: create_process (execute.c:367)
==52168==    by 0x402C40: run_script (execute.c:398)
==52168==    by 0x401336: main (quash.c:132)
==52168==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==52168== 
==52168== 
==52168== Process terminating with default action of signal 11 (SIGSEGV)
==52168==  Access not within mapped region at address 0x0
==52168==    at 0x40254F: get_current_directory (execute.c:43)
==52168==    by 0x4027DA: run_pwd (execute.c:187)
==52168==    by 0x4028BB: child_run_command (execute.c:230)
==52168==    by 0x402ADC: create_process (execute.c:367)
==52168==    by 0x402C40: run_script (execute.c:398)
==52168==    by 0x401336: main (quash.c:132)
==52168==  If you believe this happened as a result of a stack
==52168==  overflow in your program's main thread (unlikely but
==52168==  possible), you can try to increase the size of the
==52168==  main thread stack using the --main-stacksize= flag.
==52168==  The main thread stack size used in this run was 8388608.
==52067== 
==52067== HEAP SUMMARY:
==52067==     in use at exit: 0 bytes in 0 blocks
==52067==   total heap usage: 33 allocs, 33 frees, 34,903 bytes allocated
==52067== 
==52067== All heap blocks were freed -- no leaks are possible
==52067== 
==52067== For counts of detected and suppressed errors, rerun with: -v
==52067== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
==52168== 
==52168== HEAP SUMMARY:
==52168==     in use at exit: 17,730 bytes in 5 blocks
==52168==   total heap usage: 25 allocs, 20 frees, 31,015 bytes allocated
==52168== 
==52176== Conditional jump or move depends on uninitialised value(s)
==52176==    at 0x3C8D448A90: vfprintf (in /usr/lib64/libc-2.18.so)
==52176==    by 0x3C8D451A46: fprintf (in /usr/lib64/libc-2.18.so)
==52176==    by 0x402701: run_echo (execute.c:128)
==52176==    by 0x4028AF: child_run_command (execute.c:226)
==52176==    by 0x402ADC: create_process (execute.c:367)
==52176==    by 0x402C40: run_script (execute.c:398)
==52176==    by 0x401336: main (quash.c:132)
==52176==  Uninitialised value was created by a heap allocation
==52176==    at 0x4A0645D: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)
==52176==    by 0x403DB0: __initialize_memory_pool (memory_pool.c:44)
==52176==    by 0x403F2A: initialize_memory_pool (memory_pool.c:89)
==52176==    by 0x401315: main (quash.c:128)
==52176== 
==52168== LEAK SUMMARY:
==52168==    definitely lost: 0 bytes in 0 blocks
==52168==    indirectly lost: 0 bytes in 0 blocks
==52166== 
==52168==      possibly lost: 0 bytes in 0 blocks
==52168==    still reachable: 17,730 bytes in 5 blocks
==52168==         suppressed: 0 bytes in 0 blocks
==52168== Reachable blocks (those to which a pointer was found) are not shown.
==52168== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==52168== 
==52166== HEAP SUMMARY:
==52166==     in use at exit: 0 bytes in 0 blocks
==52166==   total heap usage: 9 allocs, 9 frees, 23,170 bytes allocated
==52166== 
==52168== For counts of detected and suppressed errors, rerun with: -v
==52168== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)
==52166== All heap blocks were freed -- no leaks are possible
==52166== 
==52166== For counts of detected and suppressed errors, rerun with: -v
==52166== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
