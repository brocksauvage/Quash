==20475== Memcheck, a memory error detector
==20475== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20475== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==20475== Command: /home/bsauvage/EECS678/Quash/quash/quash
==20475== 
IMPLEMENT ME: src/execute.c(line 99): check_jobs_bg_status()
==20475== Invalid free() / delete / delete[] / realloc()
==20475==    at 0x4C2CD5A: free (vg_replace_malloc.c:530)
==20475==    by 0x404126: run_script (execute.c:446)
==20475==    by 0x40144E: main (quash.c:132)
==20475==  Address 0xffeffef60 is on thread 1's stack
==20475==  in frame #1, created by run_script (execute.c:399)
==20475== 
==20475== Invalid free() / delete / delete[] / realloc()
==20475==    at 0x4C2CD5A: free (vg_replace_malloc.c:530)
==20475==    by 0x404132: run_script (execute.c:447)
==20475==    by 0x40144E: main (quash.c:132)
==20475==  Address 0xffeffef30 is on thread 1's stack
==20475==  in frame #1, created by run_script (execute.c:399)
==20475== 
==20622== Invalid write of size 1
==20622==    at 0x4038E8: get_current_directory (execute.c:73)
==20622==    by 0x403B7B: run_pwd (execute.c:217)
==20622==    by 0x403C4B: child_run_command (execute.c:264)
==20622==    by 0x403E25: create_process (execute.c:377)
==20622==    by 0x404065: run_script (execute.c:422)
==20622==    by 0x40144E: main (quash.c:132)
==20622==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==20622== 
==20622== 
==20622== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==20622==  Access not within mapped region at address 0x0
==20622==    at 0x4038E8: get_current_directory (execute.c:73)
==20622==    by 0x403B7B: run_pwd (execute.c:217)
==20622==    by 0x403C4B: child_run_command (execute.c:264)
==20622==    by 0x403E25: create_process (execute.c:377)
==20622==    by 0x404065: run_script (execute.c:422)
==20622==    by 0x40144E: main (quash.c:132)
==20622==  If you believe this happened as a result of a stack
==20622==  overflow in your program's main thread (unlikely but
==20622==  possible), you can try to increase the size of the
==20622==  main thread stack using the --main-stacksize= flag.
==20622==  The main thread stack size used in this run was 8388608.
IMPLEMENT ME: src/execute.c(line 99): check_jobs_bg_status()
IMPLEMENT ME: src/execute.c(line 99): check_jobs_bg_status()
==20622== 
==20622== HEAP SUMMARY:
==20622==     in use at exit: 17,795 bytes in 8 blocks
==20622==   total heap usage: 12 allocs, 4 frees, 1,067,715 bytes allocated
==20622== 
==20622== LEAK SUMMARY:
==20622==    definitely lost: 0 bytes in 0 blocks
==20622==    indirectly lost: 0 bytes in 0 blocks
==20622==      possibly lost: 0 bytes in 0 blocks
==20622==    still reachable: 17,795 bytes in 8 blocks
==20622==         suppressed: 0 bytes in 0 blocks
==20622== Reachable blocks (those to which a pointer was found) are not shown.
==20622== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==20622== 
==20622== For counts of detected and suppressed errors, rerun with: -v
==20622== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==20650== Invalid write of size 1
==20650==    at 0x4038E8: get_current_directory (execute.c:73)
==20650==    by 0x403B7B: run_pwd (execute.c:217)
==20650==    by 0x403C4B: child_run_command (execute.c:264)
==20650==    by 0x403E25: create_process (execute.c:377)
==20650==    by 0x404065: run_script (execute.c:422)
==20650==    by 0x40144E: main (quash.c:132)
==20650==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==20650== 
==20650== 
==20650== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==20650==  Access not within mapped region at address 0x0
==20650==    at 0x4038E8: get_current_directory (execute.c:73)
==20650==    by 0x403B7B: run_pwd (execute.c:217)
==20650==    by 0x403C4B: child_run_command (execute.c:264)
==20650==    by 0x403E25: create_process (execute.c:377)
==20650==    by 0x404065: run_script (execute.c:422)
==20650==    by 0x40144E: main (quash.c:132)
==20650==  If you believe this happened as a result of a stack
==20650==  overflow in your program's main thread (unlikely but
==20650==  possible), you can try to increase the size of the
==20650==  main thread stack using the --main-stacksize= flag.
==20650==  The main thread stack size used in this run was 8388608.
IMPLEMENT ME: src/execute.c(line 99): check_jobs_bg_status()
IMPLEMENT ME: src/execute.c(line 99): check_jobs_bg_status()
==20633== 
==20633== HEAP SUMMARY:
==20633==     in use at exit: 148 bytes in 5 blocks
==20633==   total heap usage: 23 allocs, 20 frees, 1,071,690 bytes allocated
==20633== 
==20633== 5 bytes in 1 blocks are definitely lost in loss record 2 of 5
==20633==    at 0x4C2BBAD: malloc (vg_replace_malloc.c:299)
==20633==    by 0x4EC0079: strdup (in /usr/lib64/libc-2.23.so)
==20633==    by 0x401373: get_command_string (quash.c:88)
==20633==    by 0x40401A: run_script (execute.c:419)
==20633==    by 0x40144E: main (quash.c:132)
==20633== 
==20633== 56 bytes in 1 blocks are definitely lost in loss record 5 of 5
==20633==    at 0x4C2BBAD: malloc (vg_replace_malloc.c:299)
==20633==    by 0x4026C8: new_job_queue (in /home/bsauvage/EECS678/Quash/quash/quash)
==20633==    by 0x403F45: run_script (execute.c:412)
==20633==    by 0x40144E: main (quash.c:132)
==20633== 
==20633== LEAK SUMMARY:
==20633==    definitely lost: 61 bytes in 2 blocks
==20633==    indirectly lost: 0 bytes in 0 blocks
==20633==      possibly lost: 0 bytes in 0 blocks
==20633==    still reachable: 87 bytes in 3 blocks
==20633==         suppressed: 0 bytes in 0 blocks
==20633== Reachable blocks (those to which a pointer was found) are not shown.
==20633== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==20633== 
==20633== For counts of detected and suppressed errors, rerun with: -v
==20633== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)
==20650== 
==20650== HEAP SUMMARY:
==20650==     in use at exit: 17,939 bytes in 12 blocks
==20650==   total heap usage: 35 allocs, 27 frees, 1,075,678 bytes allocated
==20650== 
==20650== 32 bytes in 2 blocks are definitely lost in loss record 4 of 10
==20650==    at 0x4C2BBAD: malloc (vg_replace_malloc.c:299)
==20650==    by 0x4EC0079: strdup (in /usr/lib64/libc-2.23.so)
==20650==    by 0x401373: get_command_string (quash.c:88)
==20650==    by 0x40401A: run_script (execute.c:419)
==20650==    by 0x40144E: main (quash.c:132)
==20650== 
==20650== 112 bytes in 2 blocks are definitely lost in loss record 7 of 10
==20650==    at 0x4C2BBAD: malloc (vg_replace_malloc.c:299)
==20650==    by 0x4026C8: new_job_queue (in /home/bsauvage/EECS678/Quash/quash/quash)
==20650==    by 0x403F45: run_script (execute.c:412)
==20650==    by 0x40144E: main (quash.c:132)
==20650== 
==20650== LEAK SUMMARY:
==20650==    definitely lost: 144 bytes in 4 blocks
==20650==    indirectly lost: 0 bytes in 0 blocks
==20650==      possibly lost: 0 bytes in 0 blocks
==20650==    still reachable: 17,795 bytes in 8 blocks
==20650==         suppressed: 0 bytes in 0 blocks
==20650== Reachable blocks (those to which a pointer was found) are not shown.
==20650== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==20650== 
==20650== For counts of detected and suppressed errors, rerun with: -v
==20650== ERROR SUMMARY: 7 errors from 5 contexts (suppressed: 0 from 0)
==20475== 
==20475== HEAP SUMMARY:
==20475==     in use at exit: 336 bytes in 10 blocks
==20475==   total heap usage: 57 allocs, 57 frees, 1,083,600 bytes allocated
==20475== 
==20475== 52 bytes in 4 blocks are definitely lost in loss record 2 of 3
==20475==    at 0x4C2BBAD: malloc (vg_replace_malloc.c:299)
==20475==    by 0x4EC0079: strdup (in /usr/lib64/libc-2.23.so)
==20475==    by 0x401373: get_command_string (quash.c:88)
==20475==    by 0x40401A: run_script (execute.c:419)
==20475==    by 0x40144E: main (quash.c:132)
==20475== 
==20475== 280 bytes in 5 blocks are definitely lost in loss record 3 of 3
==20475==    at 0x4C2BBAD: malloc (vg_replace_malloc.c:299)
==20475==    by 0x4026C8: new_job_queue (in /home/bsauvage/EECS678/Quash/quash/quash)
==20475==    by 0x403F45: run_script (execute.c:412)
==20475==    by 0x40144E: main (quash.c:132)
==20475== 
==20475== LEAK SUMMARY:
==20475==    definitely lost: 332 bytes in 9 blocks
==20475==    indirectly lost: 0 bytes in 0 blocks
==20475==      possibly lost: 0 bytes in 0 blocks
==20475==    still reachable: 4 bytes in 1 blocks
==20475==         suppressed: 0 bytes in 0 blocks
==20475== Reachable blocks (those to which a pointer was found) are not shown.
==20475== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==20475== 
==20475== For counts of detected and suppressed errors, rerun with: -v
==20475== ERROR SUMMARY: 12 errors from 4 contexts (suppressed: 0 from 0)
==20656== 
==20656== HEAP SUMMARY:
==20656==     in use at exit: 280 bytes in 9 blocks
==20656==   total heap usage: 45 allocs, 42 frees, 1,079,625 bytes allocated
==20656== 
==20656== 37 bytes in 3 blocks are definitely lost in loss record 3 of 5
==20656==    at 0x4C2BBAD: malloc (vg_replace_malloc.c:299)
==20656==    by 0x4EC0079: strdup (in /usr/lib64/libc-2.23.so)
==20656==    by 0x401373: get_command_string (quash.c:88)
==20656==    by 0x40401A: run_script (execute.c:419)
==20656==    by 0x40144E: main (quash.c:132)
==20656== 
==20656== 168 bytes in 3 blocks are definitely lost in loss record 5 of 5
==20656==    at 0x4C2BBAD: malloc (vg_replace_malloc.c:299)
==20656==    by 0x4026C8: new_job_queue (in /home/bsauvage/EECS678/Quash/quash/quash)
==20656==    by 0x403F45: run_script (execute.c:412)
==20656==    by 0x40144E: main (quash.c:132)
==20656== 
==20656== LEAK SUMMARY:
==20656==    definitely lost: 205 bytes in 6 blocks
==20656==    indirectly lost: 0 bytes in 0 blocks
==20656==      possibly lost: 0 bytes in 0 blocks
==20656==    still reachable: 75 bytes in 3 blocks
==20656==         suppressed: 0 bytes in 0 blocks
==20656== Reachable blocks (those to which a pointer was found) are not shown.
==20656== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==20656== 
==20656== For counts of detected and suppressed errors, rerun with: -v
==20656== ERROR SUMMARY: 8 errors from 4 contexts (suppressed: 0 from 0)
==20662== 
==20662== HEAP SUMMARY:
==20662==     in use at exit: 340 bytes in 11 blocks
==20662==   total heap usage: 57 allocs, 54 frees, 1,083,600 bytes allocated
==20662== 
==20662== 52 bytes in 4 blocks are definitely lost in loss record 3 of 5
==20662==    at 0x4C2BBAD: malloc (vg_replace_malloc.c:299)
==20662==    by 0x4EC0079: strdup (in /usr/lib64/libc-2.23.so)
==20662==    by 0x401373: get_command_string (quash.c:88)
==20662==    by 0x40401A: run_script (execute.c:419)
==20662==    by 0x40144E: main (quash.c:132)
==20662== 
==20662== 224 bytes in 4 blocks are definitely lost in loss record 5 of 5
==20662==    at 0x4C2BBAD: malloc (vg_replace_malloc.c:299)
==20662==    by 0x4026C8: new_job_queue (in /home/bsauvage/EECS678/Quash/quash/quash)
==20662==    by 0x403F45: run_script (execute.c:412)
==20662==    by 0x40144E: main (quash.c:132)
==20662== 
==20662== LEAK SUMMARY:
==20662==    definitely lost: 276 bytes in 8 blocks
==20662==    indirectly lost: 0 bytes in 0 blocks
==20662==      possibly lost: 0 bytes in 0 blocks
==20662==    still reachable: 64 bytes in 3 blocks
==20662==         suppressed: 0 bytes in 0 blocks
==20662== Reachable blocks (those to which a pointer was found) are not shown.
==20662== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==20662== 
==20662== For counts of detected and suppressed errors, rerun with: -v
==20662== ERROR SUMMARY: 10 errors from 4 contexts (suppressed: 0 from 0)
