==52052== Memcheck, a memory error detector
==52052== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==52052== Using Valgrind-3.9.0 and LibVEX; rerun with -h for copyright info
==52052== Command: /home/bsauvage/EECS678/Quash/quash/quash
==52052== 
==52186== Invalid write of size 1
==52186==    at 0x40254F: get_current_directory (execute.c:43)
==52186==    by 0x4027DA: run_pwd (execute.c:187)
==52186==    by 0x4028BB: child_run_command (execute.c:230)
==52186==    by 0x402ADC: create_process (execute.c:367)
==52186==    by 0x402C40: run_script (execute.c:398)
==52186==    by 0x401336: main (quash.c:132)
==52186==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==52186== 
==52186== 
==52186== Process terminating with default action of signal 11 (SIGSEGV)
==52186==  Access not within mapped region at address 0x0
==52186==    at 0x40254F: get_current_directory (execute.c:43)
==52186==    by 0x4027DA: run_pwd (execute.c:187)
==52186==    by 0x4028BB: child_run_command (execute.c:230)
==52186==    by 0x402ADC: create_process (execute.c:367)
==52186==    by 0x402C40: run_script (execute.c:398)
==52186==    by 0x401336: main (quash.c:132)
==52186==  If you believe this happened as a result of a stack
==52186==  overflow in your program's main thread (unlikely but
==52186==  possible), you can try to increase the size of the
==52186==  main thread stack using the --main-stacksize= flag.
==52186==  The main thread stack size used in this run was 8388608.
==52186== 
==52186== HEAP SUMMARY:
==52186==     in use at exit: 17,730 bytes in 5 blocks
==52186==   total heap usage: 8 allocs, 3 frees, 19,074 bytes allocated
==52186== 
==52186== LEAK SUMMARY:
==52186==    definitely lost: 0 bytes in 0 blocks
==52186==    indirectly lost: 0 bytes in 0 blocks
==52186==      possibly lost: 0 bytes in 0 blocks
==52186==    still reachable: 17,730 bytes in 5 blocks
==52186==         suppressed: 0 bytes in 0 blocks
==52186== Reachable blocks (those to which a pointer was found) are not shown.
==52186== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==52186== 
==52186== For counts of detected and suppressed errors, rerun with: -v
==52186== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)
==52219== Invalid write of size 1
==52219==    at 0x40254F: get_current_directory (execute.c:43)
==52219==    by 0x4027DA: run_pwd (execute.c:187)
==52219==    by 0x4028BB: child_run_command (execute.c:230)
==52219==    by 0x402ADC: create_process (execute.c:367)
==52219==    by 0x402C40: run_script (execute.c:398)
==52219==    by 0x401336: main (quash.c:132)
==52219==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==52219== 
==52219== 
==52219== Process terminating with default action of signal 11 (SIGSEGV)
==52219==  Access not within mapped region at address 0x0
==52219==    at 0x40254F: get_current_directory (execute.c:43)
==52219==    by 0x4027DA: run_pwd (execute.c:187)
==52219==    by 0x4028BB: child_run_command (execute.c:230)
==52219==    by 0x402ADC: create_process (execute.c:367)
==52219==    by 0x402C40: run_script (execute.c:398)
==52219==    by 0x401336: main (quash.c:132)
==52219==  If you believe this happened as a result of a stack
==52219==  overflow in your program's main thread (unlikely but
==52219==  possible), you can try to increase the size of the
==52219==  main thread stack using the --main-stacksize= flag.
==52219==  The main thread stack size used in this run was 8388608.
==52219== 
==52219== HEAP SUMMARY:
==52219==     in use at exit: 17,730 bytes in 5 blocks
==52219==   total heap usage: 25 allocs, 20 frees, 26,885 bytes allocated
==52219== 
==52219== LEAK SUMMARY:
==52219==    definitely lost: 0 bytes in 0 blocks
==52219==    indirectly lost: 0 bytes in 0 blocks
==52219==      possibly lost: 0 bytes in 0 blocks
==52219==    still reachable: 17,730 bytes in 5 blocks
==52219==         suppressed: 0 bytes in 0 blocks
==52219== Reachable blocks (those to which a pointer was found) are not shown.
==52219== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==52219== 
==52219== For counts of detected and suppressed errors, rerun with: -v
==52219== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)
==52208== 
==52208== HEAP SUMMARY:
==52208==     in use at exit: 0 bytes in 0 blocks
==52208==   total heap usage: 16 allocs, 16 frees, 22,962 bytes allocated
==52208== 
==52208== All heap blocks were freed -- no leaks are possible
==52208== 
==52208== For counts of detected and suppressed errors, rerun with: -v
==52208== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
==52220== 
==52220== HEAP SUMMARY:
==52220==     in use at exit: 0 bytes in 0 blocks
==52220==   total heap usage: 32 allocs, 32 frees, 30,757 bytes allocated
==52220== 
==52220== All heap blocks were freed -- no leaks are possible
==52220== 
==52220== For counts of detected and suppressed errors, rerun with: -v
==52220== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
==52052== 
==52052== HEAP SUMMARY:
==52052==     in use at exit: 0 bytes in 0 blocks
==52052==   total heap usage: 41 allocs, 41 frees, 34,668 bytes allocated
==52052== 
==52052== All heap blocks were freed -- no leaks are possible
==52052== 
==52052== For counts of detected and suppressed errors, rerun with: -v
==52052== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
==52238== 
==52238== HEAP SUMMARY:
==52238==     in use at exit: 0 bytes in 0 blocks
==52238==   total heap usage: 41 allocs, 41 frees, 34,668 bytes allocated
==52238== 
==52238== All heap blocks were freed -- no leaks are possible
==52238== 
==52238== For counts of detected and suppressed errors, rerun with: -v
==52238== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
