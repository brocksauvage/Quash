==1502== Memcheck, a memory error detector
==1502== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1502== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1502== Command: /home/bsauvage/EECS678/Quash/quash/quash
==1502== 
IMPLEMENT ME: src/execute.c(line 65): check_jobs_bg_status()
IMPLEMENT ME: src/execute.c(line 325): create_process()
IMPLEMENT ME: src/execute.c(line 359): run_script()
IMPLEMENT ME: src/execute.c(line 325): create_process()
==1763== Invalid write of size 1
==1763==    at 0x401579: get_current_directory (execute.c:37)
==1763==    by 0x401858: run_pwd (execute.c:182)
==1763==    by 0x401928: child_run_command (execute.c:225)
==1763==    by 0x401AA3: create_process (execute.c:328)
==1763==    by 0x401B94: run_script (execute.c:354)
==1763==    by 0x40120E: main (quash.c:132)
==1763==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1763== 
==1763== 
==1763== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1763==  Access not within mapped region at address 0x0
==1763==    at 0x401579: get_current_directory (execute.c:37)
==1763==    by 0x401858: run_pwd (execute.c:182)
==1763==    by 0x401928: child_run_command (execute.c:225)
==1763==    by 0x401AA3: create_process (execute.c:328)
==1763==    by 0x401B94: run_script (execute.c:354)
==1763==    by 0x40120E: main (quash.c:132)
==1763==  If you believe this happened as a result of a stack
==1763==  overflow in your program's main thread (unlikely but
==1763==  possible), you can try to increase the size of the
==1763==  main thread stack using the --main-stacksize= flag.
==1763==  The main thread stack size used in this run was 8388608.
==1502== 
==1502== HEAP SUMMARY:
==1502==     in use at exit: 0 bytes in 0 blocks
==1502==   total heap usage: 9 allocs, 9 frees, 1,067,650 bytes allocated
==1502== 
==1502== All heap blocks were freed -- no leaks are possible
==1502== 
==1502== For counts of detected and suppressed errors, rerun with: -v
==1502== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==1763== 
==1763== HEAP SUMMARY:
==1763==     in use at exit: 17,730 bytes in 5 blocks
==1763==   total heap usage: 9 allocs, 4 frees, 1,067,650 bytes allocated
==1763== 
==1763== LEAK SUMMARY:
==1763==    definitely lost: 0 bytes in 0 blocks
==1763==    indirectly lost: 0 bytes in 0 blocks
==1763==      possibly lost: 0 bytes in 0 blocks
==1763==    still reachable: 17,730 bytes in 5 blocks
==1763==         suppressed: 0 bytes in 0 blocks
==1763== Reachable blocks (those to which a pointer was found) are not shown.
==1763== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1763== 
==1763== For counts of detected and suppressed errors, rerun with: -v
==1763== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
